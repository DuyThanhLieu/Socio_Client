{"ast":null,"code":"var _jsxFileName = \"/Users/ThanhLieu/Socio_Client/src/components/Posts.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { UilEstate } from '@iconscout/react-unicons';\nimport { Post } from './Post';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { GetTimeLineAction, GetUserPost } from '../action/PostAction';\nimport PostReducer from './../reducers/PostReducer';\nimport { useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport InfiniteScroll from 'react-infinite-scroll-component';\n//inf\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Posts = () => {\n  _s();\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const currentPath = location.pathname;\n  //User\n  const AuthData = useSelector(state => state.AuthReducer.user);\n  const UserData = useSelector(state => state.UserReducer.viewingUser);\n  //loading status\n  const isLoading = useSelector(state => state.PostReducer.isLoading);\n\n  // posts\n  const timelinePosts = useSelector(state => state.PostReducer.timelinePosts);\n  const userPosts = useSelector(state => state.PostReducer.userPosts);\n\n  //\n\n  useEffect(() => {\n    const GetTimeLine = async () => {\n      currentPath === '/' ? dispatch(GetTimeLineAction(AuthData === null || AuthData === void 0 ? void 0 : AuthData._id)) : dispatch(GetUserPost(UserData === null || UserData === void 0 ? void 0 : UserData._id));\n    };\n    GetTimeLine();\n    return () => {\n      console.log('clean up');\n    };\n  }, []);\n\n  // scroll event\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \" flex flex-col gap-4  \",\n    children: currentPath === '/' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: timelinePosts && timelinePosts.map((data, index) =>\n      /*#__PURE__*/\n      // truyền key để react quản lý tốt hơn, biết có cần render, fetch lại không ( biết có thay đổi không)\n      _jsxDEV(Post, {\n        postData: data\n      }, data._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 29\n      }, this))\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: userPosts && userPosts.map((data, index) =>\n      /*#__PURE__*/\n      // truyền key để react quản lý tốt hơn, biết có cần render, fetch lại không ( biết có thay đổi không)\n      _jsxDEV(Post, {\n        postData: data\n      }, data._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 29\n      }, this))\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n_s(Posts, \"lBZjwmYFlfVfVOwv2K0uszjRP1Y=\", false, function () {\n  return [useDispatch, useLocation, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n_c = Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","useEffect","UilEstate","Post","useDispatch","useSelector","GetTimeLineAction","GetUserPost","PostReducer","useLocation","axios","InfiniteScroll","jsxDEV","_jsxDEV","Fragment","_Fragment","Posts","_s","dispatch","location","currentPath","pathname","AuthData","state","AuthReducer","user","UserData","UserReducer","viewingUser","isLoading","timelinePosts","userPosts","GetTimeLine","_id","console","log","className","children","map","data","index","postData","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ThanhLieu/Socio_Client/src/components/Posts.jsx"],"sourcesContent":["import React, { useEffect } from 'react'\nimport { UilEstate } from '@iconscout/react-unicons'\nimport { Post } from './Post';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { GetTimeLineAction, GetUserPost } from '../action/PostAction';\nimport PostReducer from './../reducers/PostReducer';\nimport { useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport InfiniteScroll from 'react-infinite-scroll-component';\n//inf\nexport const Posts = () => {\n    const dispatch = useDispatch()\n    const location = useLocation();\n    const currentPath = location.pathname;\n    //User\n    const AuthData = useSelector(state => state.AuthReducer.user)\n    const UserData = useSelector(state => state.UserReducer.viewingUser)\n    //loading status\n    const isLoading = useSelector(state => state.PostReducer.isLoading)\n\n    // posts\n    const timelinePosts = useSelector(state => state.PostReducer.timelinePosts)\n    const userPosts = useSelector(state => state.PostReducer.userPosts)\n\n    //\n\n    useEffect(() => {\n        const GetTimeLine = async () => {\n\n            currentPath === '/' ? dispatch(GetTimeLineAction(AuthData?._id)) : dispatch(GetUserPost(UserData?._id))\n        }\n        GetTimeLine()\n        return () => {\n            console.log('clean up')\n        }\n    }, [])\n\n\n    // scroll event\n\n    return (\n\n\n\n\n        <div className=\" flex flex-col gap-4  \" >\n\n\n\n            {\n                currentPath === '/' ?\n                    <>\n\n                        {timelinePosts && timelinePosts.map((data, index) =>\n                            // truyền key để react quản lý tốt hơn, biết có cần render, fetch lại không ( biết có thay đổi không)\n                            <Post postData={data} key={data._id}></Post>\n                        )}\n\n                    </>\n                    :\n                    <>\n                        {userPosts && userPosts.map((data, index) =>\n                            // truyền key để react quản lý tốt hơn, biết có cần render, fetch lại không ( biết có thay đổi không)\n                            <Post postData={data} key={data._id}></Post>\n                        )}\n                    </>\n            }\n\n        </div>\n\n\n    )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}