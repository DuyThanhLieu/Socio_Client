{"ast":null,"code":"import axios from 'axios';\nimport { LoginAPI, RegisterAPI } from './../api/AuthAPI';\nexport const RegisterAction = dataUser => {\n  return async dispatch => {\n    dispatch({\n      type: \"IS_REGISTERING\"\n    });\n    try {\n      let response = await RegisterAPI(dataUser);\n      let data = await response.data;\n      if (data) {\n        dispatch({\n          type: \"REGISTER_SUCCESSFULLY\",\n          payload: data\n        });\n      } else {\n        throw new Error(\"Invalid response data\");\n      }\n    } catch (error) {\n      // username has already been taking\n      console.log(\"Error:\", error.message);\n      dispatch({\n        type: \"REGISTER_ERROR\"\n      });\n    }\n  };\n};\n_c = RegisterAction;\nexport const LoginAction = dataUser => {\n  return async dispatch => {\n    dispatch({\n      type: \"IS_LOGGING\"\n    });\n    try {\n      let response = await LoginAPI(dataUser);\n      let data = await response.data;\n      if (data) {\n        dispatch({\n          type: \"LOGIN_SUCCESSFULLY\",\n          payload: data\n        });\n      } else {\n        throw new Error(\"Invalid response data\");\n      }\n    } catch (error) {\n      // username has already been taking\n      console.log(\"Error:\", error.message);\n      dispatch({\n        type: \"IS_WRONG_PASSWORD\"\n      });\n    }\n  };\n};\n_c2 = LoginAction;\nvar _c, _c2;\n$RefreshReg$(_c, \"RegisterAction\");\n$RefreshReg$(_c2, \"LoginAction\");","map":{"version":3,"names":["axios","LoginAPI","RegisterAPI","RegisterAction","dataUser","dispatch","type","response","data","payload","Error","error","console","log","message","_c","LoginAction","_c2","$RefreshReg$"],"sources":["/Users/ThanhLieu/Downloads/Socio_Client-master/src/action/AuthAction.js"],"sourcesContent":["import axios from 'axios';\nimport { LoginAPI, RegisterAPI } from './../api/AuthAPI';\n\nexport const RegisterAction = (dataUser) => {\n  return async (dispatch) => {\n    dispatch({ type: \"IS_REGISTERING\" })\n    try {\n      let response = await RegisterAPI(dataUser)\n      let data = await response.data\n      if (data) {\n        dispatch({ type: \"REGISTER_SUCCESSFULLY\", payload: data })\n      } else {\n        throw new Error(\"Invalid response data\")\n      }\n    } catch (error) {\n      // username has already been taking\n      console.log(\"Error:\", error.message)\n      dispatch({ type: \"REGISTER_ERROR\" })\n    }\n  };\n};\nexport const LoginAction = (dataUser) => {\n  return async (dispatch) => {\n    dispatch({ type: \"IS_LOGGING\" })\n    try {\n      let response = await LoginAPI(dataUser)\n      let data = await response.data\n      if (data) {\n        dispatch({ type: \"LOGIN_SUCCESSFULLY\", payload: data })\n      } else {\n        throw new Error(\"Invalid response data\")\n      }\n    } catch (error) {\n      // username has already been taking\n      console.log(\"Error:\", error.message)\n      dispatch({ type: \"IS_WRONG_PASSWORD\" })\n    }\n  };\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;AAExD,OAAO,MAAMC,cAAc,GAAIC,QAAQ,IAAK;EAC1C,OAAO,MAAOC,QAAQ,IAAK;IACzBA,QAAQ,CAAC;MAAEC,IAAI,EAAE;IAAiB,CAAC,CAAC;IACpC,IAAI;MACF,IAAIC,QAAQ,GAAG,MAAML,WAAW,CAACE,QAAQ,CAAC;MAC1C,IAAII,IAAI,GAAG,MAAMD,QAAQ,CAACC,IAAI;MAC9B,IAAIA,IAAI,EAAE;QACRH,QAAQ,CAAC;UAAEC,IAAI,EAAE,uBAAuB;UAAEG,OAAO,EAAED;QAAK,CAAC,CAAC;MAC5D,CAAC,MAAM;QACL,MAAM,IAAIE,KAAK,CAAC,uBAAuB,CAAC;MAC1C;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd;MACAC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEF,KAAK,CAACG,OAAO,CAAC;MACpCT,QAAQ,CAAC;QAAEC,IAAI,EAAE;MAAiB,CAAC,CAAC;IACtC;EACF,CAAC;AACH,CAAC;AAACS,EAAA,GAjBWZ,cAAc;AAkB3B,OAAO,MAAMa,WAAW,GAAIZ,QAAQ,IAAK;EACvC,OAAO,MAAOC,QAAQ,IAAK;IACzBA,QAAQ,CAAC;MAAEC,IAAI,EAAE;IAAa,CAAC,CAAC;IAChC,IAAI;MACF,IAAIC,QAAQ,GAAG,MAAMN,QAAQ,CAACG,QAAQ,CAAC;MACvC,IAAII,IAAI,GAAG,MAAMD,QAAQ,CAACC,IAAI;MAC9B,IAAIA,IAAI,EAAE;QACRH,QAAQ,CAAC;UAAEC,IAAI,EAAE,oBAAoB;UAAEG,OAAO,EAAED;QAAK,CAAC,CAAC;MACzD,CAAC,MAAM;QACL,MAAM,IAAIE,KAAK,CAAC,uBAAuB,CAAC;MAC1C;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd;MACAC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEF,KAAK,CAACG,OAAO,CAAC;MACpCT,QAAQ,CAAC;QAAEC,IAAI,EAAE;MAAoB,CAAC,CAAC;IACzC;EACF,CAAC;AACH,CAAC;AAACW,GAAA,GAjBWD,WAAW;AAAA,IAAAD,EAAA,EAAAE,GAAA;AAAAC,YAAA,CAAAH,EAAA;AAAAG,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}