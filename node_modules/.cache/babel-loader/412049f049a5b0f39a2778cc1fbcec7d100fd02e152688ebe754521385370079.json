{"ast":null,"code":"import { GetAllFriends, GetAllUsersNonFriends, GetAllReq, GetAllSentReq } from './../api/UserAPI';\nexport const AllUsersAction = userid => async dispatch => {\n  try {\n    dispatch({\n      type: \"NON_FRIENDS_STARTING\"\n    });\n    dispatch({\n      type: \"REMOVE_USER_POST\"\n    });\n    let res = await GetAllUsersNonFriends(userid);\n    let data = res.data;\n    dispatch({\n      type: \"NON_FRIENDS_SUCCESSFULLY\",\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: \"NON_FRIENDS_ERROR\"\n    });\n  }\n};\nexport const AllFriendsAction = userid => async dispatch => {\n  try {\n    dispatch({\n      type: \"ALL_FRIENDS_STARTING\"\n    });\n    dispatch({\n      type: \"REMOVE_USER_POST\"\n    });\n    let res = await GetAllFriends(userid);\n    let data = res.data;\n    dispatch({\n      type: \"ALL_FRIENDS_SUCCESSFULLY\",\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: \"ALL_FRIENDS_ERROR\"\n    });\n  }\n};\nexport const AllReqAction = userid => async dispatch => {\n  try {\n    dispatch({\n      type: \"ALL_REQ_STARTING\"\n    });\n    dispatch({\n      type: \"REMOVE_USER_POST\"\n    });\n    let res = await GetAllReq(userid);\n    let data = res.data;\n    dispatch({\n      type: \"ALL_REQ_SUCCESSFULLY\",\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: \"ALL_REQ_ERROR\"\n    });\n  }\n};\nexport const AllSentReqAction = userid => async dispatch => {\n  try {\n    dispatch({\n      type: \"ALL_SENT_REQ_STARTING\"\n    });\n    dispatch({\n      type: \"REMOVE_USER_POST\"\n    });\n    let res = await GetAllSentReq(userid);\n    let data = res.data;\n    dispatch({\n      type: \"ALL_SENT_REQ_SUCCESSFULLY\",\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: \"ALL_SENT_REQ_ERROR\"\n    });\n  }\n};","map":{"version":3,"names":["GetAllFriends","GetAllUsersNonFriends","GetAllReq","GetAllSentReq","AllUsersAction","userid","dispatch","type","res","data","payload","error","AllFriendsAction","AllReqAction","AllSentReqAction"],"sources":["/Users/ThanhLieu/Downloads/Socio_Client-master/src/action/CommunityAction.js"],"sourcesContent":["\nimport { GetAllFriends, GetAllUsersNonFriends, GetAllReq, GetAllSentReq } from './../api/UserAPI';\n\n\nexport const AllUsersAction = (userid) => async (dispatch) => {\n    try {\n        dispatch({ type: \"NON_FRIENDS_STARTING\" })\n        dispatch({ type: \"REMOVE_USER_POST\" })\n\n        let res = await GetAllUsersNonFriends(userid)\n        let data = res.data\n        dispatch({ type: \"NON_FRIENDS_SUCCESSFULLY\", payload: data })\n\n\n    } catch (error) {\n        dispatch({ type: \"NON_FRIENDS_ERROR\" })\n    }\n}\nexport const AllFriendsAction = (userid) => async (dispatch) => {\n    try {\n        dispatch({ type: \"ALL_FRIENDS_STARTING\" })\n        dispatch({ type: \"REMOVE_USER_POST\" })\n\n        let res = await GetAllFriends(userid)\n        let data = res.data\n        dispatch({ type: \"ALL_FRIENDS_SUCCESSFULLY\", payload: data })\n\n\n    } catch (error) {\n        dispatch({ type: \"ALL_FRIENDS_ERROR\" })\n    }\n}\n\nexport const AllReqAction = (userid) => async (dispatch) => {\n    try {\n        dispatch({ type: \"ALL_REQ_STARTING\" })\n        dispatch({ type: \"REMOVE_USER_POST\" })\n\n        let res = await GetAllReq(userid)\n        let data = res.data\n        dispatch({ type: \"ALL_REQ_SUCCESSFULLY\", payload: data })\n\n\n    } catch (error) {\n        dispatch({ type: \"ALL_REQ_ERROR\" })\n    }\n}\nexport const AllSentReqAction = (userid) => async (dispatch) => {\n    try {\n        dispatch({ type: \"ALL_SENT_REQ_STARTING\" })\n        dispatch({ type: \"REMOVE_USER_POST\" })\n\n        let res = await GetAllSentReq(userid)\n        let data = res.data\n        dispatch({ type: \"ALL_SENT_REQ_SUCCESSFULLY\", payload: data })\n\n\n    } catch (error) {\n        dispatch({ type: \"ALL_SENT_REQ_ERROR\" })\n    }\n}\n"],"mappings":"AACA,SAASA,aAAa,EAAEC,qBAAqB,EAAEC,SAAS,EAAEC,aAAa,QAAQ,kBAAkB;AAGjG,OAAO,MAAMC,cAAc,GAAIC,MAAM,IAAK,MAAOC,QAAQ,IAAK;EAC1D,IAAI;IACAA,QAAQ,CAAC;MAAEC,IAAI,EAAE;IAAuB,CAAC,CAAC;IAC1CD,QAAQ,CAAC;MAAEC,IAAI,EAAE;IAAmB,CAAC,CAAC;IAEtC,IAAIC,GAAG,GAAG,MAAMP,qBAAqB,CAACI,MAAM,CAAC;IAC7C,IAAII,IAAI,GAAGD,GAAG,CAACC,IAAI;IACnBH,QAAQ,CAAC;MAAEC,IAAI,EAAE,0BAA0B;MAAEG,OAAO,EAAED;IAAK,CAAC,CAAC;EAGjE,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZL,QAAQ,CAAC;MAAEC,IAAI,EAAE;IAAoB,CAAC,CAAC;EAC3C;AACJ,CAAC;AACD,OAAO,MAAMK,gBAAgB,GAAIP,MAAM,IAAK,MAAOC,QAAQ,IAAK;EAC5D,IAAI;IACAA,QAAQ,CAAC;MAAEC,IAAI,EAAE;IAAuB,CAAC,CAAC;IAC1CD,QAAQ,CAAC;MAAEC,IAAI,EAAE;IAAmB,CAAC,CAAC;IAEtC,IAAIC,GAAG,GAAG,MAAMR,aAAa,CAACK,MAAM,CAAC;IACrC,IAAII,IAAI,GAAGD,GAAG,CAACC,IAAI;IACnBH,QAAQ,CAAC;MAAEC,IAAI,EAAE,0BAA0B;MAAEG,OAAO,EAAED;IAAK,CAAC,CAAC;EAGjE,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZL,QAAQ,CAAC;MAAEC,IAAI,EAAE;IAAoB,CAAC,CAAC;EAC3C;AACJ,CAAC;AAED,OAAO,MAAMM,YAAY,GAAIR,MAAM,IAAK,MAAOC,QAAQ,IAAK;EACxD,IAAI;IACAA,QAAQ,CAAC;MAAEC,IAAI,EAAE;IAAmB,CAAC,CAAC;IACtCD,QAAQ,CAAC;MAAEC,IAAI,EAAE;IAAmB,CAAC,CAAC;IAEtC,IAAIC,GAAG,GAAG,MAAMN,SAAS,CAACG,MAAM,CAAC;IACjC,IAAII,IAAI,GAAGD,GAAG,CAACC,IAAI;IACnBH,QAAQ,CAAC;MAAEC,IAAI,EAAE,sBAAsB;MAAEG,OAAO,EAAED;IAAK,CAAC,CAAC;EAG7D,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZL,QAAQ,CAAC;MAAEC,IAAI,EAAE;IAAgB,CAAC,CAAC;EACvC;AACJ,CAAC;AACD,OAAO,MAAMO,gBAAgB,GAAIT,MAAM,IAAK,MAAOC,QAAQ,IAAK;EAC5D,IAAI;IACAA,QAAQ,CAAC;MAAEC,IAAI,EAAE;IAAwB,CAAC,CAAC;IAC3CD,QAAQ,CAAC;MAAEC,IAAI,EAAE;IAAmB,CAAC,CAAC;IAEtC,IAAIC,GAAG,GAAG,MAAML,aAAa,CAACE,MAAM,CAAC;IACrC,IAAII,IAAI,GAAGD,GAAG,CAACC,IAAI;IACnBH,QAAQ,CAAC;MAAEC,IAAI,EAAE,2BAA2B;MAAEG,OAAO,EAAED;IAAK,CAAC,CAAC;EAGlE,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZL,QAAQ,CAAC;MAAEC,IAAI,EAAE;IAAqB,CAAC,CAAC;EAC5C;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}