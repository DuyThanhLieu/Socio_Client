{"ast":null,"code":"import { CreatePostAPI, GetTimeLine, GetUserPostAPI } from './../api/PostAPI';\nexport const CreatePostAction = postData => async dispatch => {\n  try {\n    dispatch({\n      type: \"IS_POSTING\"\n    });\n    console.log('time');\n    let res = await CreatePostAPI(postData);\n    let dataRes = await res.data;\n    dispatch({\n      type: \"POSTING_SUCCESSFULLY\",\n      payload: dataRes\n    });\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: \"POSTING_ERROR\"\n    });\n  }\n};\nexport const GetTimeLineAction = userid => async dispatch => {\n  try {\n    dispatch({\n      type: \"IS_TIMELINE\"\n    });\n    let res = await GetTimeLine(userid);\n    let data = res.data;\n    dispatch({\n      type: \"TIMELINE_SUCCESSFULLY\",\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: \"TIMELINE_ERROR\"\n    });\n  }\n};\nexport const GetUserPost = userid => async dispatch => {\n  try {\n    dispatch({\n      type: \"USER_POST_STARTING\"\n    });\n    let res = await GetUserPostAPI(userid);\n    let data = res.data;\n    dispatch({\n      type: \"USER_POST_SUCCESSFULLY\",\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: \"USER_POST_ERROR\"\n    });\n  }\n};","map":{"version":3,"names":["CreatePostAPI","GetTimeLine","GetUserPostAPI","CreatePostAction","postData","dispatch","type","console","log","res","dataRes","data","payload","error","GetTimeLineAction","userid","GetUserPost"],"sources":["/Users/ThanhLieu/Socio_Client/src/action/PostAction.js"],"sourcesContent":["\nimport { CreatePostAPI, GetTimeLine, GetUserPostAPI } from './../api/PostAPI';\n\n\n\nexport const CreatePostAction = (postData) => async (dispatch) => {\n    try {\n        dispatch({ type: \"IS_POSTING\" })\n        console.log('time')\n        let res = await CreatePostAPI(postData)\n        let dataRes = await res.data\n        dispatch({ type: \"POSTING_SUCCESSFULLY\", payload: dataRes })\n\n\n    } catch (error) {\n        console.log(error)\n\n        dispatch({ type: \"POSTING_ERROR\" })\n    }\n}\nexport const GetTimeLineAction = (userid) => async (dispatch) => {\n    try {\n        dispatch({ type: \"IS_TIMELINE\" })\n        let res = await GetTimeLine(userid)\n        let data = res.data\n        dispatch({ type: \"TIMELINE_SUCCESSFULLY\", payload: data })\n\n\n    } catch (error) {\n        dispatch({ type: \"TIMELINE_ERROR\" })\n    }\n}\n\nexport const GetUserPost = (userid) => async (dispatch) => {\n    try {\n        dispatch({ type: \"USER_POST_STARTING\" })\n        let res = await GetUserPostAPI(userid)\n        let data = res.data\n        dispatch({ type: \"USER_POST_SUCCESSFULLY\", payload: data })\n\n\n\n    } catch (error) {\n        dispatch({ type: \"USER_POST_ERROR\" })\n    }\n}\n"],"mappings":"AACA,SAASA,aAAa,EAAEC,WAAW,EAAEC,cAAc,QAAQ,kBAAkB;AAI7E,OAAO,MAAMC,gBAAgB,GAAIC,QAAQ,IAAK,MAAOC,QAAQ,IAAK;EAC9D,IAAI;IACAA,QAAQ,CAAC;MAAEC,IAAI,EAAE;IAAa,CAAC,CAAC;IAChCC,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;IACnB,IAAIC,GAAG,GAAG,MAAMT,aAAa,CAACI,QAAQ,CAAC;IACvC,IAAIM,OAAO,GAAG,MAAMD,GAAG,CAACE,IAAI;IAC5BN,QAAQ,CAAC;MAAEC,IAAI,EAAE,sBAAsB;MAAEM,OAAO,EAAEF;IAAQ,CAAC,CAAC;EAGhE,CAAC,CAAC,OAAOG,KAAK,EAAE;IACZN,OAAO,CAACC,GAAG,CAACK,KAAK,CAAC;IAElBR,QAAQ,CAAC;MAAEC,IAAI,EAAE;IAAgB,CAAC,CAAC;EACvC;AACJ,CAAC;AACD,OAAO,MAAMQ,iBAAiB,GAAIC,MAAM,IAAK,MAAOV,QAAQ,IAAK;EAC7D,IAAI;IACAA,QAAQ,CAAC;MAAEC,IAAI,EAAE;IAAc,CAAC,CAAC;IACjC,IAAIG,GAAG,GAAG,MAAMR,WAAW,CAACc,MAAM,CAAC;IACnC,IAAIJ,IAAI,GAAGF,GAAG,CAACE,IAAI;IACnBN,QAAQ,CAAC;MAAEC,IAAI,EAAE,uBAAuB;MAAEM,OAAO,EAAED;IAAK,CAAC,CAAC;EAG9D,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZR,QAAQ,CAAC;MAAEC,IAAI,EAAE;IAAiB,CAAC,CAAC;EACxC;AACJ,CAAC;AAED,OAAO,MAAMU,WAAW,GAAID,MAAM,IAAK,MAAOV,QAAQ,IAAK;EACvD,IAAI;IACAA,QAAQ,CAAC;MAAEC,IAAI,EAAE;IAAqB,CAAC,CAAC;IACxC,IAAIG,GAAG,GAAG,MAAMP,cAAc,CAACa,MAAM,CAAC;IACtC,IAAIJ,IAAI,GAAGF,GAAG,CAACE,IAAI;IACnBN,QAAQ,CAAC;MAAEC,IAAI,EAAE,wBAAwB;MAAEM,OAAO,EAAED;IAAK,CAAC,CAAC;EAI/D,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZR,QAAQ,CAAC;MAAEC,IAAI,EAAE;IAAkB,CAAC,CAAC;EACzC;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}